import { useState } from 'react'
import { customToast } from '../utils/customToast.jsx'
import { bookingAPI } from '../services/api'
import './RentRoom.css'

const RentRoom = ({ room, onClose, onSuccess, isDeposit = false }) => {
  const [activeTab, setActiveTab] = useState('month') // 'month' or 'group'
  const [formData, setFormData] = useState({
    duration: '',
    durationUnit: 'MONTH',
    moveInDate: '',
    numberOfPeople: 1,
    phoneNumber: '',
    note: ''
  })
  const [loading, setLoading] = useState(false)
  const [error, setError] = useState('')

  const handleChange = (e) => {
    const { name, value } = e.target
    setFormData(prev => ({
      ...prev,
      [name]: value
    }))
  }

  const handleSubmit = async (e) => {
    e.preventDefault()
    
    // Validate
    if (!formData.duration || !formData.moveInDate || !formData.phoneNumber) {
      setError('Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin b·∫Øt bu·ªôc')
      return
    }

    if (formData.numberOfPeople > 3) {
      setError('S·ªë ng∆∞·ªùi t·ªëi ƒëa l√† 3')
      return
    }

    setLoading(true)
    setError('')

    try {
      const bookingData = {
        roomId: room.id,
        duration: parseInt(formData.duration),
        durationUnit: formData.durationUnit,
        moveInDate: formData.moveInDate,
        numberOfPeople: parseInt(formData.numberOfPeople),
        phoneNumber: formData.phoneNumber,
        note: formData.note,
        isDeposit: isDeposit
      }
      
      await bookingAPI.createBooking(bookingData)
      customToast.success(isDeposit ? 'ƒê·∫∑t c·ªçc ph√≤ng th√†nh c√¥ng! üí∞' : 'Thu√™ ph√≤ng th√†nh c√¥ng! üéâ')
      if (onSuccess) onSuccess()
      if (onClose) onClose()
    } catch (err) {
      console.error('Error creating booking:', err)
      setError(err.response?.data?.message || 'C√≥ l·ªói x·∫£y ra')
    } finally {
      setLoading(false)
    }
  }

  return (
    <div className="modal-overlay">
      <div className="rent-modal-container" onClick={(e) => e.stopPropagation()}>
        <div className="rent-modal-header">
          <h2>Y√™u c·∫ßu thu√™ ph√≤ng</h2>
          <button className="close-btn" onClick={onClose}>&times;</button>
        </div>

        {/* Tabs */}
        <div className="rent-tabs">
          <button 
            className={`rent-tab ${activeTab === 'month' ? 'active' : ''}`}
            onClick={() => setActiveTab('month')}
          >
            ·ªû m·ªôt m√¨nh
          </button>
          <button 
            className={`rent-tab ${activeTab === 'group' ? 'active' : ''}`}
            onClick={() => setActiveTab('group')}
          >
            ·ªû nh√≥m
          </button>
        </div>

        <form onSubmit={handleSubmit} className="rent-room-form">
          {error && <div className="error-message">{error}</div>}

          {/* Th·ªùi h·∫°n thu√™ v√† ƒê∆°n v·ªã */}
          <div className="form-row-split">
            <div className="form-group-half">
              <label htmlFor="duration">
                Th·ªùi h·∫°n thu√™ <span className="required">*</span>
              </label>
              <input
                type="number"
                id="duration"
                name="duration"
                value={formData.duration}
                onChange={handleChange}
                placeholder="Nh·∫≠p s·ªë th√°ng"
                min="1"
                required
              />
            </div>

            <div className="form-group-half">
              <label htmlFor="durationUnit">
                ƒê∆°n v·ªã <span className="required">*</span>
              </label>
              <select
                id="durationUnit"
                name="durationUnit"
                value={formData.durationUnit}
                onChange={handleChange}
                required
              >
                <option value="MONTH">Th√°ng</option>
                <option value="YEAR">NƒÉm</option>
              </select>
            </div>
          </div>

          {/* Ng√†y d·ªçn v√†o */}
          <div className="form-group">
            <label htmlFor="moveInDate">
              Ng√†y d·ªçn v√†o ƒë·ªÉ ·ªü <span className="required">*</span>
            </label>
            <input
              type="date"
              id="moveInDate"
              name="moveInDate"
              value={formData.moveInDate}
              onChange={handleChange}
              min={new Date().toISOString().split('T')[0]}
              required
            />
          </div>

          {/* S·ªë ng∆∞·ªùi ·ªü 1 ph√≤ng */}
          <div className="form-group">
            <label htmlFor="numberOfPeople">
              S·ªë ng∆∞·ªùi ·ªü 1 ph√≤ng (T·ªëi ƒëa 3) <span className="required">*</span>
            </label>
            <input
              type="number"
              id="numberOfPeople"
              name="numberOfPeople"
              value={formData.numberOfPeople}
              onChange={handleChange}
              placeholder="Nh·∫≠p s·ªë ng∆∞·ªùi (1-3)"
              min="1"
              max="3"
              required
            />
          </div>

          {/* S·ªë ƒëi·ªán tho·∫°i */}
          <div className="form-group">
            <label htmlFor="phoneNumber">S·ªë ƒëi·ªán tho·∫°i li√™n h·ªá</label>
            <input
              type="tel"
              id="phoneNumber"
              name="phoneNumber"
              value={formData.phoneNumber}
              onChange={handleChange}
              placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i"
              pattern="[0-9]{10}"
            />
          </div>

          {/* Ghi ch√∫ */}
          <div className="form-group">
            <label htmlFor="note">Ghi ch√∫ th√™m</label>
            <textarea
              id="note"
              name="note"
              value={formData.note}
              onChange={handleChange}
              placeholder="Nh·∫≠p ghi ch√∫ ho·∫∑c y√™u c·∫ßu ƒë·∫∑c bi·ªát (kh√¥ng b·∫Øt bu·ªôc)"
              rows="4"
            />
          </div>

          {/* Actions */}
          <div className="form-actions-modern">
            <button type="button" className="btn-cancel-modern" onClick={onClose}>
              H·ªßy
            </button>
            <button type="submit" className="btn-confirm-modern" disabled={loading}>
              {loading ? 'ƒêang x·ª≠ l√Ω...' : 'X√°c nh·∫≠n thu√™ ph√≤ng'}
            </button>
          </div>
        </form>
      </div>
    </div>
  )
}

export default RentRoom

