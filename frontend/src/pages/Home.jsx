import { useState, useEffect } from 'react'
import { useNavigate, Link } from 'react-router-dom'
import { Heart } from 'lucide-react'
import Navbar from '../components/Navbar'
import Footer from '../components/Footer'
import { roomAPI, savedRoomAPI } from '../services/api'
import toast from 'react-hot-toast'
import '../styles/Contact.css'
import '../styles/About.css'

function Home({ currentUser, onLogout }) {
  const [rooms, setRooms] = useState([])
  const [loading, setLoading] = useState(false)
  const [activeTab, setActiveTab] = useState('rent') // 'rent' or 'roommate'
  const [searchKeyword, setSearchKeyword] = useState('')
  const [savedRooms, setSavedRooms] = useState({}) // Track saved status { roomId: true/false }
  const [contactForm, setContactForm] = useState({
    name: '',
    email: '',
    message: ''
  })
  const [showSuccessMessage, setShowSuccessMessage] = useState(false)
  const navigate = useNavigate()

  useEffect(() => {
    fetchRooms()
    if (currentUser) {
      checkSavedRooms()
    }
    
    // X·ª≠ l√Ω scroll xu·ªëng ph·∫ßn li√™n h·ªá ho·∫∑c gi·ªõi thi·ªáu n·∫øu c√≥ hash
    const hash = window.location.hash
    if (hash === '#contact' || hash === '#about') {
      setTimeout(() => {
        const section = document.getElementById(hash.replace('#', ''))
        if (section) {
          section.scrollIntoView({ behavior: 'smooth', block: 'start' })
        }
      }, 300)
    }
  }, [currentUser])

  const fetchRooms = async () => {
    setLoading(true)
    try {
      const data = await roomAPI.getAvailableRooms()
      setRooms(data.slice(0, 6)) // L·∫•y 6 ph√≤ng n·ªïi b·∫≠t
    } catch (err) {
      console.error('Error fetching rooms:', err)
    } finally {
      setLoading(false)
    }
  }

  const checkSavedRooms = async () => {
    try {
      const savedRoomsList = await savedRoomAPI.getSavedRooms()
      const savedMap = {}
      savedRoomsList.forEach(item => {
        savedMap[item.roomId] = true
      })
      setSavedRooms(savedMap)
    } catch (err) {
      console.error('Error checking saved rooms:', err)
    }
  }

  const handleSaveRoom = async (e, roomId) => {
    e.preventDefault()
    e.stopPropagation()
    
    if (!currentUser) {
      toast.error('Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ l∆∞u ph√≤ng')
      navigate('/login')
      return
    }

    try {
      if (savedRooms[roomId]) {
        await savedRoomAPI.unsaveRoom(roomId)
        setSavedRooms(prev => ({ ...prev, [roomId]: false }))
        toast.success('ƒê√£ b·ªè l∆∞u ph√≤ng')
      } else {
        await savedRoomAPI.saveRoom(roomId)
        setSavedRooms(prev => ({ ...prev, [roomId]: true }))
        toast.success('ƒê√£ l∆∞u ph√≤ng')
      }
    } catch (err) {
      const errorMessage = err.response?.data?.error || err.message
      if (errorMessage === 'Room already saved') {
        toast.error('B·∫°n ƒë√£ l∆∞u ph√≤ng n√†y r·ªìi!')
      } else {
        toast.error(errorMessage || 'C√≥ l·ªói x·∫£y ra')
      }
    }
  }

  const formatPrice = (price) => {
    return new Intl.NumberFormat('vi-VN').format(price)
  }

  const handleSearch = async (e) => {
    e.preventDefault()
    
    if (activeTab === 'rent') {
      // N·∫øu c√≥ search keyword, chuy·ªÉn sang trang t√¨m tr·ªç k√®m params
      if (searchKeyword) {
        navigate(`/rooms/phong-tro?keyword=${searchKeyword}`)
      } else {
        navigate('/rooms/phong-tro')
      }
    }
    // T√¨m b·∫°n ·ªü gh√©p c√≥ th·ªÉ th√™m sau
  }

  const handleContactFormChange = (e) => {
    const { name, value } = e.target
    setContactForm(prev => ({
      ...prev,
      [name]: value
    }))
  }

  const handleContactSubmit = (e) => {
    e.preventDefault()
    // TODO: G·ª≠i form ƒë·∫øn backend ho·∫∑c email service
    console.log('Contact form submitted:', contactForm)
    
    // Hi·ªÉn th·ªã th√¥ng b√°o th√†nh c√¥ng
    setShowSuccessMessage(true)
    
    // Reset form
    setContactForm({
      name: '',
      email: '',
      message: ''
    })
    
    // ·∫®n th√¥ng b√°o sau 5 gi√¢y
    setTimeout(() => {
      setShowSuccessMessage(false)
    }, 5000)
  }

  // top 9 booked room
  const [topRooms, setTopRooms] = useState([])

  useEffect(() => {
    fetchRooms()
    fetchTopBookedRooms()
    if (currentUser) checkSavedRooms()
    const hash = window.location.hash
    if (hash === '#contact' || hash === '#about') {
      setTimeout(() => {
        const section = document.getElementById(hash.replace('#', ''))
        if (section) section.scrollIntoView({ behavior: 'smooth', block: 'start' })
      }, 300)
    }
  }, [currentUser])

//  Fetch Top 9 Most Booked Rooms
  const fetchTopBookedRooms = async () => {
    try {
      const res = await fetch('http://localhost:8080/api/analytics/top-booked-rooms')
      const data = await res.json()
      setTopRooms(data)
    } catch (err) {
      console.error('Error fetching top booked rooms:', err)
    }
  }

  return (
    <div className="bg-gradient">
      <Navbar currentUser={currentUser} onLogout={onLogout} />

      <main className="container">
        {/* Hero Section */}
        <section className="hero-modern">
          <h1 className="hero-title">T√¨m ph√≤ng tr·ªç ho√†n h·∫£o cho b·∫°n</h1>
          <p className="hero-subtitle">K·∫øt n·ªëi v·ªõi h√†ng ng√†n ch·ªß tr·ªç uy t√≠n trong khu v·ª±c H√≤a L·∫°c</p>

          {/* Search Box */}
          <div className="search-box-modern">
            <div className="search-tabs">
              <button
                  className={`search-tab ${activeTab === 'rent' ? 'active' : ''}`}
                  onClick={() => setActiveTab('rent')}
              >
                Ph√≤ng tr·ªç cho thu√™
              </button>
              <button
                  className={`search-tab ${activeTab === 'roommate' ? 'active' : ''}`}
                  onClick={() => setActiveTab('roommate')}
              >
                T√¨m b·∫°n ·ªü gh√©p
              </button>
            </div>

            <form onSubmit={handleSearch} className="search-form-modern">
              <div className="search-input-wrapper">
                <span className="search-icon">üìç</span>
                <input
                    type="text"
                    placeholder="T√¨m theo ƒë·ªãa ch·ªâ, qu·∫≠n, th√†nh ph·ªë..."
                    value={searchKeyword}
                    onChange={(e) => setSearchKeyword(e.target.value)}
                    className="search-input-modern"
                />
              </div>
              <button type="submit" className="btn-search-modern">
                üîç T√¨m ki·∫øm
              </button>
            </form>
          </div>
        </section>

        {/* Featured Rooms */}
        <section className="featured-section">
          <h2 className="section-title">Ph√≤ng tr·ªç n·ªïi b·∫≠t</h2>
          <p className="section-subtitle">Kh√°m ph√° h√†ng ngh√¨n l·ª±a ch·ªçn ph√≤ng tr·ªç ch·∫•t l∆∞·ª£ng v·ªõi gi√° c·∫£ ph√π h·ª£p</p>

          {loading ? (
              <div style={{textAlign: 'center', padding: '60px 0', color: 'var(--text-muted)'}}>
                ƒêang t·∫£i...
              </div>
          ) : rooms.length > 0 ? (
              <div className="home-room-grid">
                {rooms.map((room) => (
                    <div key={room.id} className="home-room-card-new">
                      <div className="home-room-image-new">
                        <img src={room.imageUrl || 'https://via.placeholder.com/400x300?text=Ph√≤ng+Tr·ªç'}
                             alt={room.name}/>
                        <button
                            className="btn-favorite"
                            onClick={(e) => handleSaveRoom(e, room.id)}
                            style={{
                              background: savedRooms[room.id] ? '#EF4444' : 'rgba(255, 255, 255, 0.9)',
                              color: savedRooms[room.id] ? 'white' : '#EF4444'
                            }}
                        >
                          <Heart
                              size={18}
                              fill={savedRooms[room.id] ? 'currentColor' : 'none'}
                          />
                        </button>
                        <button className="btn-share">üì§</button>
                      </div>
                      <div className="home-room-content-new">
                        <h3 className="home-room-title-new">{room.name}</h3>
                        <p className="home-room-location-new">üìç {room.location}</p>
                        <div className="home-room-price-new">
                          {formatPrice(room.price)} ƒë/th√°ng
                        </div>
                        <div style={{marginTop: '12px'}}>
                          <Link to={`/room/${room.id}`} className="btn-view-detail">
                            üëÅÔ∏è Xem chi ti·∫øt
                          </Link>
                        </div>
                      </div>
                    </div>
                ))}
              </div>
          ) : (
              <div className="empty-state">
                <div className="empty-icon">üè†</div>
                <h3>Ch∆∞a c√≥ ph√≤ng tr·ªç n·ªïi b·∫≠t</h3>
                <p>Hi·ªán t·∫°i ch∆∞a c√≥ ph√≤ng tr·ªç n√†o.</p>
              </div>
          )}
        </section>

        <section className="featured-section">
          <h2 className="section-title">Best Choice üèÜ</h2>
          <p className="section-subtitle">Nh·ªØng l·ª±a ch·ªçn h√†ng ƒë·∫ßu ƒë∆∞·ª£c c√°c kh√°ch h√†ng tin t∆∞·ªüng</p>
          {topRooms.length > 0 ? (
              <div className="home-room-grid">
                {topRooms.map((room) => (
                    <div key={room.id} className="home-room-card-new">
                      <div className="home-room-image-new">
                        <img src={room.imageUrl || 'https://via.placeholder.com/400x300?text=Ph√≤ng+Tr·ªç'}
                             alt={room.name}/>
                        <button
                            className="btn-favorite"
                            onClick={(e) => handleSaveRoom(e, room.id)}
                            style={{
                              background: savedRooms[room.id] ? '#EF4444' : 'rgba(255, 255, 255, 0.9)',
                              color: savedRooms[room.id] ? 'white' : '#EF4444'
                            }}
                        >
                          <Heart size={18} fill={savedRooms[room.id] ? 'currentColor' : 'none'}/>
                        </button>
                        <button className="btn-share">üì§</button>
                        <div className="top-room-ribbon">üî• #{topRooms.indexOf(room) + 1}</div>
                      </div>

                      <div className="home-room-content-new">
                        <h3 className="home-room-title-new">{room.name}</h3>
                        <p className="home-room-location-new">üìç {room.location}</p>
                        <div className="home-room-price-new">{formatPrice(room.price)} ƒë/th√°ng</div>
                       

                        <div style={{marginTop: '12px'}}>
                          <Link to={`/room/${room.id}`} className="btn-view-detail">
                            üëÅÔ∏è Xem chi ti·∫øt
                          </Link>
                        </div>
                      </div>
                    </div>
                ))}
              </div>
          ) : (
              <div className="empty-state">
                <div className="empty-icon">‚≠ê</div>
                <h3>Ch∆∞a c√≥ d·ªØ li·ªáu th·ªëng k√™</h3>
                <p>H·ªá th·ªëng ƒëang thu th·∫≠p d·ªØ li·ªáu ƒë·∫∑t ph√≤ng...</p>
              </div>
          )}
        </section>

        {/* About Section */}
        <section id="about" className="about-section">
          {/* Hero Section */}
          <div className="about-hero">
            <h1 className="about-hero-title">T√¨m Tr·ªç ‚Äì K·∫øt n·ªëi nhanh, r√µ r√†ng, an to√†n</h1>
            <p className="about-hero-subtitle">
              Gi√∫p sinh vi√™n v√† ng∆∞·ªùi ƒëi l√†m t√¨m ƒë∆∞·ª£c n∆°i ·ªü ∆∞ng √Ω ch·ªâ v·ªõi v√†i c√∫ nh·∫•p chu·ªôt
            </p>
            <div className="about-hero-illustration">
              <div className="illustration-icon">üè†</div>
              <div className="illustration-icon">üì±</div>
              <div className="illustration-icon">üó∫Ô∏è</div>
            </div>
          </div>

          {/* About Us */}
          <div className="about-us">
            <h2 className="about-section-title">V·ªÅ ch√∫ng t√¥i</h2>
            <p className="about-description">
              <strong>T√¨m Tr·ªç</strong> ƒë∆∞·ª£c x√¢y d·ª±ng v·ªõi m·ª•c ti√™u t·∫°o ra n·ªÅn t·∫£ng ƒë∆°n gi·∫£n, minh b·∫°ch v√† tin c·∫≠y
              cho vi·ªác thu√™ tr·ªç. Ch√∫ng t√¥i hi·ªÉu r·∫±ng vi·ªác t√¨m ki·∫øm m·ªôt n∆°i ·ªü ph√π h·ª£p l√† m·ªôt trong nh·ªØng
              nhu c·∫ßu thi·∫øt y·∫øu nh·∫•t c·ªßa sinh vi√™n v√† ng∆∞·ªùi ƒëi l√†m. V·ªõi T√¨m Tr·ªç, ch√∫ng t√¥i mong mu·ªën
              gi√∫p b·∫°n ti·∫øt ki·ªám th·ªùi gian v√† t√¨m ƒë∆∞·ª£c n∆°i ·ªü ∆∞ng √Ω m·ªôt c√°ch nhanh ch√≥ng nh·∫•t.
            </p>

            <div className="timeline">
              <div className="timeline-item">
                <div className="timeline-icon">üìÖ</div>
                <div className="timeline-content">
                  <h3>2024</h3>
                  <p>NƒÉm th√†nh l·∫≠p</p>
                </div>
              </div>
              <div className="timeline-item">
                <div className="timeline-icon">üë•</div>
                <div className="timeline-content">
                  <h3>5,000+</h3>
                  <p>Ng∆∞·ªùi d√πng</p>
                </div>
              </div>
              <div className="timeline-item">
                <div className="timeline-icon">‚úÖ</div>
                <div className="timeline-content">
                  <h3>10,000+</h3>
                  <p>Tin ƒë√£ x√°c th·ª±c</p>
                </div>
              </div>
            </div>
          </div>

          {/* Core Values */}
          <div className="core-values">
            <h2 className="about-section-title">Gi√° tr·ªã c·ªët l√µi</h2>
            <div className="values-grid">
              <div className="value-card">
                <div className="value-icon">üîç</div>
                <h3 className="value-title">Minh b·∫°ch</h3>
                <p className="value-description">
                  Th√¥ng tin r√µ r√†ng, x√°c th·ª±c. M·ªçi ph√≤ng tr·ªç ƒë·ªÅu ƒë∆∞·ª£c ki·ªÉm duy·ªát k·ªπ l∆∞·ª°ng
                  tr∆∞·ªõc khi ƒëƒÉng t·∫£i ƒë·ªÉ ƒë·∫£m b·∫£o t√≠nh ch√≠nh x√°c.
                </p>
              </div>

              <div className="value-card">
                <div className="value-icon">‚ö°</div>
                <h3 className="value-title">Nhanh ch√≥ng</h3>
                <p className="value-description">
                  B·ªô l·ªçc th√¥ng minh, thao t√°c ƒë∆°n gi·∫£n. T√¨m ki·∫øm v√† thu√™ ph√≤ng ch·ªâ trong
                  v√†i ph√∫t v·ªõi giao di·ªán tr·ª±c quan.
                </p>
              </div>

              <div className="value-card">
                <div className="value-icon">üõ°Ô∏è</div>
                <h3 className="value-title">An to√†n</h3>
                <p className="value-description">
                  Ki·ªÉm duy·ªát tin, tr√°nh l·ª´a ƒë·∫£o. Ch√∫ng t√¥i cam k·∫øt b·∫£o v·ªá quy·ªÅn l·ª£i
                  c·ªßa ng∆∞·ªùi thu√™ v√† ch·ªß tr·ªç.
                </p>
              </div>
            </div>
          </div>

          {/* How It Works */}
          <div className="how-it-works">
            <h2 className="about-section-title">Quy tr√¨nh ho·∫°t ƒë·ªông</h2>
            <div className="steps-grid">
              <div className="step-card">
                <div className="step-number">1</div>
                <div className="step-icon">üîç</div>
                <h3 className="step-title">T√¨m ki·∫øm & l·ªçc</h3>
                <p className="step-description">
                  S·ª≠ d·ª•ng b·ªô l·ªçc th√¥ng minh ƒë·ªÉ t√¨m ki·∫øm ph√≤ng tr·ªç theo nhu c·∫ßu c·ªßa b·∫°n:
                  v·ªã tr√≠, gi√° c·∫£, di·ªán t√≠ch, ti·ªán √≠ch.
                </p>
              </div>

              <div className="step-card">
                <div className="step-number">2</div>
                <div className="step-icon">üìã</div>
                <h3 className="step-title">Xem chi ti·∫øt</h3>
                <p className="step-description">
                  Xem th√¥ng tin minh b·∫°ch: ·∫£nh th·∫≠t, ƒë·ªãa ch·ªâ r√µ r√†ng, th√¥ng tin li√™n h·ªá
                  ch·ªß tr·ªç, m√¥ t·∫£ ƒë·∫ßy ƒë·ªß.
                </p>
              </div>

              <div className="step-card">
                <div className="step-number">3</div>
                <div className="step-icon">‚úÖ</div>
                <h3 className="step-title">ƒê·∫∑t c·ªçc/Thu√™ ngay</h3>
                <p className="step-description">
                  Li√™n h·ªá tr·ª±c ti·∫øp v·ªõi ch·ªß tr·ªç, ƒë·∫∑t c·ªçc ho·∫∑c thu√™ ngay v·ªõi quy tr√¨nh
                  ƒë∆°n gi·∫£n v√† nhanh ch√≥ng.
                </p>
              </div>
            </div>
          </div>

          {/* Highlights */}
          <div className="highlights">
            <h2 className="about-section-title">S·ªë li·ªáu n·ªïi b·∫≠t</h2>
            <div className="stats-grid">
              <div className="stat-card">
                <div className="stat-number">10,000+</div>
                <p className="stat-label">Ph√≤ng tr·ªç ƒë√£ ƒëƒÉng k√Ω</p>
                <div className="stat-icon">üè†</div>
              </div>

              <div className="stat-card">
                <div className="stat-number">5,000+</div>
                <p className="stat-label">Ng∆∞·ªùi thu√™ ƒëang tin d√πng</p>
                <div className="stat-icon">üë•</div>
              </div>

              <div className="stat-card">
                <div className="stat-number">36%</div>
                <p className="stat-label">Tin ƒë√£ x√°c th·ª±c</p>
                <div className="stat-icon">‚úÖ</div>
              </div>
            </div>
          </div>

          {/* Team */}
          <div className="team-section">
            <h2 className="about-section-title">ƒê·ªôi ng≈© ph√°t tri·ªÉn</h2>
            <p className="team-description">
              Ch√∫ng t√¥i l√† nh·ªØng sinh vi√™n ƒëam m√™ c√¥ng ngh·ªá, mong mu·ªën t·∫°o ra tr·∫£i nghi·ªám t·ªët nh·∫•t
              cho c·ªông ƒë·ªìng ng∆∞·ªùi t√¨m tr·ªç t·∫°i khu v·ª±c H√≤a L·∫°c v√† c√°c ƒë·ªãa ph∆∞∆°ng kh√°c.
            </p>
            <div className="team-grid">
              <div className="team-member">
                <div className="member-avatar">üë®‚Äçüíª</div>
                <h3 className="member-name">Nh√≥m ph√°t tri·ªÉn</h3>
                <p className="member-role">Full-stack Developers</p>
              </div>
              <div className="team-member">
                <div className="member-avatar">üé®</div>
                <h3 className="member-name">Nh√≥m thi·∫øt k·∫ø</h3>
                <p className="member-role">UI/UX Designers</p>
              </div>
              <div className="team-member">
                <div className="member-avatar">üìä</div>
                <h3 className="member-name">Nh√≥m qu·∫£n l√Ω</h3>
                <p className="member-role">Product Managers</p>
              </div>
            </div>

            <div className="team-commitment">
              <h3 className="commitment-title">Cam k·∫øt c·ªßa ch√∫ng t√¥i</h3>
              <p className="commitment-text">
                üéØ Lu√¥n l·∫Øng nghe v√† c·∫£i thi·ªán d·ª±a tr√™n ph·∫£n h·ªìi c·ªßa ng∆∞·ªùi d√πng<br/>
                üí° Kh√¥ng ng·ª´ng ƒë·ªïi m·ªõi v√† ph√°t tri·ªÉn t√≠nh nƒÉng m·ªõi<br/>
                ü§ù X√¢y d·ª±ng c·ªông ƒë·ªìng thu√™ tr·ªç l√†nh m·∫°nh v√† tin c·∫≠y<br/>
                üåü Mang ƒë·∫øn tr·∫£i nghi·ªám t·ªët nh·∫•t cho m·ªçi ng∆∞·ªùi d√πng
              </p>
            </div>
          </div>
        </section>

        {/* Contact Section */}
        <section id="contact" className="contact-section">
          <div className="contact-header">
            <h2 className="contact-title">Li√™n h·ªá v·ªõi T√¨m Tr·ªç</h2>
            <p className="contact-subtitle">
              H·ªó tr·ª£ kh√°ch h√†ng ‚Ä¢ H·ª£p t√°c ƒë·ªëi t√°c ‚Ä¢ G√≥p √Ω s·∫£n ph·∫©m
            </p>
          </div>

          <div className="contact-content">
            {/* Contact Info Cards */}
            <div className="contact-info-section">
              <div className="contact-card">
                <div className="contact-icon">üìß</div>
                <h3>Email h·ªó tr·ª£</h3>
                <p>support@timtro.vn</p>
                <a href="mailto:support@timtro.vn" className="contact-link">G·ª≠i email</a>
              </div>

              <div className="contact-card">
                <div className="contact-icon">üìû</div>
                <h3>Hotline</h3>
                <p>0987 123 123</p>
                <p className="contact-note">(Gi·ªù h√†nh ch√≠nh)</p>
              </div>

              <div className="contact-card">
                <div className="contact-icon">üìç</div>
                <h3>ƒê·ªãa ch·ªâ vƒÉn ph√≤ng</h3>
                <p>Khu v·ª±c H√≤a L·∫°c, H√† N·ªôi</p>
                <a href="https://maps.google.com" target="_blank" rel="noopener noreferrer" className="contact-link">
                  Xem b·∫£n ƒë·ªì
                </a>
              </div>

              <div className="contact-card">
                <div className="contact-icon">üí¨</div>
                <h3>M·∫°ng x√£ h·ªôi</h3>
                <div className="social-links">
                  <a href="https://facebook.com" target="_blank" rel="noopener noreferrer"
                     className="social-btn facebook">
                    Facebook
                  </a>
                  <a href="https://zalo.me" target="_blank" rel="noopener noreferrer" className="social-btn zalo">
                    Zalo
                  </a>
                </div>
              </div>
            </div>

            {/* Contact Form */}
            <div className="contact-form-section">
              <h3 className="form-title">üì© G·ª≠i tin nh·∫Øn cho ch√∫ng t√¥i</h3>

              {showSuccessMessage && (
                  <div className="success-message">
                    ‚úÖ C·∫£m ∆°n b·∫°n, ch√∫ng t√¥i s·∫Ω ph·∫£n h·ªìi s·ªõm!
                  </div>
              )}

              <form onSubmit={handleContactSubmit} className="contact-form">
                <div className="form-group-contact">
                  <label htmlFor="name">H·ªç v√† t√™n</label>
                  <input
                      type="text"
                      id="name"
                      name="name"
                      value={contactForm.name}
                      onChange={handleContactFormChange}
                      placeholder="Nh·∫≠p h·ªç v√† t√™n c·ªßa b·∫°n"
                      required
                  />
                </div>

                <div className="form-group-contact">
                  <label htmlFor="email">Email</label>
                  <input
                      type="email"
                      id="email"
                      name="email"
                      value={contactForm.email}
                      onChange={handleContactFormChange}
                      placeholder="Nh·∫≠p ƒë·ªãa ch·ªâ email c·ªßa b·∫°n"
                      required
                  />
                </div>

                <div className="form-group-contact">
                  <label htmlFor="message">N·ªôi dung</label>
                  <textarea
                      id="message"
                      name="message"
                      value={contactForm.message}
                      onChange={handleContactFormChange}
                      placeholder="Nh·∫≠p n·ªôi dung tin nh·∫Øn..."
                      rows="5"
                      required
                  ></textarea>
                </div>

                <button type="submit" className="btn-submit-contact">
                  üì© G·ª≠i tin nh·∫Øn
                </button>
              </form>
            </div>
          </div>

          {/* Social Media Icons */}
          <div className="social-media-section">
            <h3>K·∫øt n·ªëi v·ªõi ch√∫ng t√¥i</h3>
            <div className="social-icons">
              <a href="https://facebook.com" target="_blank" rel="noopener noreferrer"
                 className="social-icon facebook-icon" title="Facebook">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                  <path
                      d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
                </svg>
              </a>
              <a href="https://github.com" target="_blank" rel="noopener noreferrer" className="social-icon github-icon"
                 title="GitHub">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                  <path
                      d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                </svg>
              </a>
              <a href="https://linkedin.com" target="_blank" rel="noopener noreferrer"
                 className="social-icon linkedin-icon" title="LinkedIn">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                  <path
                      d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
                </svg>
              </a>
            </div>
          </div>
        </section>
      </main>

      <Footer/>
    </div>
  )
}

export default Home

